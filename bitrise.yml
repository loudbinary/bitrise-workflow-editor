format_version: 1.3.1
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  - RELEASE_VERSION: 0.9.4
  - BIN_NAME: workflow-editor
  
  - API_SERVER_PORT: "3321"
  - FRONTEND_PORT: "4567"
  - MODE: "CLI"

workflows:
  up-api:
    envs:
      - BITRISE_CONFIG: "$TEST_BITRISE_CONFIG_PATH"
      - BITRISE_SECRETS: "$TEST_BITRISE_SECRETS_PATH"
      - USE_MIDDLEMAN_SERVER: "true"
    steps:
    - script:
        inputs:
        - content: |
            #!/bin/bash
            set -ex
            go get github.com/codegangsta/gin
            gin --port $API_SERVER_PORT

  setup-middleman:
    steps:
    - script:
        deps:
          apt_get:
          - name: ruby
          - name: ruby-dev
          - name: build-essential
          - name: nodejs
          # for nokogiri
          - name: patch
          - name: zlib1g-dev
          - name: liblzma-dev
        inputs:
        - content: |
            #!/bin/bash
            set -ex
            bundle install --path .bundle/inst

  middleman-build:
    before_run:
    - setup-middleman
    steps:
    - script:
        inputs:
        - content: |
            #!/bin/bash
            set -ex
            bundle exec middleman build --clean --verbose

  middleman-build-for-bitrise-io:
    envs:
      - MODE: "WEBSITE"
    after_run:
    - middleman-build

  up-middleman-server:
    before_run:
    - setup-middleman
    steps:
    - script:
        inputs:
        - content: |
            #!/bin/bash
            set -ex
            bundle exec middleman server

  up-middleman-jasmine:
    before_run:
    - setup-middleman
    steps:
    - script:
        inputs:
        - content: |
            #!/bin/bash
            set -ex
            bundle exec middleman build
            mkdir -p ./spec/javascripts/main/
            cp -f ./build/javascripts/main.js ./spec/javascripts/main/
            rm -rf ./build
            bundle exec middleman server
            rm -rf ./spec/javascripts/main/

  ci:
    before_run:
    - _install_test_tools
    - middleman-build
    - test

  go-install:
    before_run:
    - assets-precompile
    steps:
    - script:
        inputs:
        - content: |
            #!/bin/bash
            set -ex
            go install

  deps-update:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            rm -rf ./vendor
            rm -rf ./Godeps
            go get -u github.com/tools/godep
            godep version
            go get -t -d ./...
            go get golang.org/x/sys/unix
            go get github.com/bitrise-io/envman/models
            go get github.com/bitrise-io/stepman/models
            go get github.com/ryanuber/go-glob
            go get github.com/davecgh/go-spew/spew
            go get github.com/pmezard/go-difflib/difflib
            go get github.com/inconshreveable/mousetrap
            godep save ./...

  assets-precompile:
    before_run:
    - middleman-build
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            go get github.com/GeertJohan/go.rice/rice
            rm -rf ./apiserver/www/
            mv ./build/ ./apiserver/www/
            cd ./apiserver
            rice embed-go

  _install_test_tools:
    steps:
    - script:
        title: Install required testing tools
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            # Check for unhandled errors
            go get -u github.com/kisielk/errcheck
            # Go lint
            go get -u github.com/golang/lint/golint

  test:
    steps:
    - script:
        title: GOLIST_WITHOUT_VENDOR
        inputs:
        - content: |-
            set -ex
            no_vendor_paths="$(go list ./... | grep -v vendor)"
            envman add --key GOLIST_WITHOUT_VENDOR --value "$no_vendor_paths"
          opts:
            # opts, for bitrise.yml parsing test in the workflow editor
            is_expand: true
            title: The Script Content - test title
            is_required: true
            is_dont_change_value: false
    - script:
        title: Go Test
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            # go test $GOLIST_WITHOUT_VENDOR
            go test ./...
    - script:
        title: Go Vet
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            go vet $GOLIST_WITHOUT_VENDOR
    - script:
        title: Err check
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            errcheck -asserts=true -blank=true $GOLIST_WITHOUT_VENDOR
    - script:
        title: Go Lint
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            # lint
            while read -r line; do
              golint -set_exit_status $line
            done <<< "$GOLIST_WITHOUT_VENDOR"

  # ----------------------------------------------------------------
  # --- workflows for Releasing
  create-release:
    steps:
    - script:
        title: Set new version & create CHANGELOG
        inputs:
        - content: |-
            #!/bin/bash
            set -ex

            go get github.com/bitrise-tools/releaseman

            export CI=true

            releaseman create-changelog \
              --version $RELEASE_VERSION \
              --set-version-script "bash _scripts/set_version.sh version/version.go bitrise-plugin.yml"
  create-binaries:
    title: Create binaries
    description: |
        Creates Linux and Darwin binaries
    before_run:
    - assets-precompile
    steps:
    - script:
        title: Create binaries
        inputs:
        - content: |
            #!/bin/bash
            set -ex

            echo
            echo "Create final binaries"
            echo "  Build number: $BITRISE_BUILD_NUMBER"

            export ARCH=x86_64
            export GOARCH=amd64

            # Create Darwin bin
            export OS=Darwin
            export GOOS=darwin

            DEPLOY_PATH="_bin/$BIN_NAME-$OS-$ARCH"
            echo "  Create final Darwin binary at: $DEPLOY_PATH"

            version_package="github.com/bitrise-io/bitrise-workflow-editor/version"

            go build \
              -ldflags "-X $version_package.BuildNumber=$BITRISE_BUILD_NUMBER -X $version_package.Commit=$GIT_CLONE_COMMIT_HASH" \
              -o "$DEPLOY_PATH"

            envman add --key OSX_DEPLOY_PATH --value $DEPLOY_PATH
            cp $DEPLOY_PATH $BITRISE_DEPLOY_DIR/$BIN_NAME-$OS-$ARCH
            echo "  Copy final Darwin binary to: $BITRISE_DEPLOY_DIR/$BIN_NAME-$OS-$ARCH"


            # Create Linux binary
            export OS=Linux
            export GOOS=linux

            DEPLOY_PATH="_bin/$BIN_NAME-$OS-$ARCH"
            echo "  Create final Linux binary at: $DEPLOY_PATH"

            go build \
              -ldflags "-X $version_package.BuildNumber=$BITRISE_BUILD_NUMBER -X $version_package.Commit=$GIT_CLONE_COMMIT_HASH" \
              -o "$DEPLOY_PATH"

            envman add --key LINUX_DEPLOY_PATH --value $DEPLOY_PATH
            cp $DEPLOY_PATH $BITRISE_DEPLOY_DIR/$BIN_NAME-$OS-$ARCH
            echo "  Copy final Linux binary to: $BITRISE_DEPLOY_DIR/$BIN_NAME-$OS-$ARCH"